Microsoft (R) Macro Assembler Version 14.00.24210.0	    03/08/21 08:04:27
#Driver, Version 1      (Driver.asm			     Page 1 - 1


				TITLE Driver, Version 1      (Driver.asm)
				;-----------------------------------------------
				; Chase Carroll
				; CPEN 3710
				; Mar 5, 2021
				;
				; This program drives operation for the
				; addition and subtraction subprocedure.
				; Uses the ESI, EDI, EDX, EBX registers.
				; Program executes in protected mode.
				;-----------------------------------------------
				include Irvine32.inc			; needed for access to various functions
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data							; set up variables and constants to use
				; num1 and num2 to be used for addition, num3 and num4 for subtraction
				; adsum holds result of addition, susum holds result of subtraction
 00000000 607B 35D9 77F5	num1		WORD 607Bh,35D9h,77F5h,5526h,0E4C3h,48C2h
	   5526 E4C3 48C2
 0000000C C392 ED40 92C6	num2		WORD 0C392h,0ED40h,92C6h,4F17h,2495h,1157h
	   4F17 2495 1157
 00000018  00000006 [		adsum		WORD 6 DUP(?)
	    0000
	   ]
 00000024 F0AB 24C2 95A2	num3		WORD 0F0ABh,24C2h,95A2h,164Eh,2731h,1079h
	   164E 2731 1079
 00000030 1265 3C7F 642E	num4		WORD 1265h,3C7Fh,642Eh,2324h,34E5h,0862h
	   2324 34E5 0862
 0000003C  00000006 [		susum		WORD 6 DUP(?)
	    0000
	   ]



 00000000			.code
				;-----------------------------------------------
				; This procedure performs either addition or
				; subtraction using the listed registers and
				; their values. It is intended for use with
				; unsigned extended integers of similar size.
				; RECEIVES: ESI, EDI, EDX, EBX
				; RETURNS: ESI +/- EDI = EDX
				; REQUIRES: Nothing
				; MODIFIES: Return value and flags
				; Program executes in protected mode.
				;
				; ATTRIBUTIONS: Kip Irvine, for his extended
				; addition example code.
				;-----------------------------------------------
 00000000			domath		proc
 00000000  83 FB 00			cmp		ebx,0				; check if operation should be addition, i.e. 0
 00000003  75 1D			jnz		L2					; jump to L2 if operation should be subtraction, i.e. 1

 00000005  B8 00000000		L1:	mov		eax,0
 0000000A  8B 06			mov		eax,[esi]			; move part of first value into register
 0000000C  13 07			adc		eax,[edi]			; add part of second value to part of first, including any carry
 0000000E  9C				pushfd						; preserve carry flag so it is not modified by following instructions
 0000000F  89 02			mov		[edx],eax			; move partial result into memory
 00000011  83 C6 02			add		esi,TYPE WORD		; select next item in num1
 00000014  83 C7 02			add		edi,TYPE WORD		; select next item in num2
 00000017  83 C2 02			add		edx,TYPE WORD		; select next result storage location in adsum
 0000001A  9D				popfd						; restore flags
 0000001B  E2 E8			loop	L1					; begin loop again and decrement ECX
 0000001D  66| 83 12 00			adc		WORD PTR [edx],0	; add the remaining carry, if any
 00000021  C3				ret							; terminate after addition and return to main

 00000022  8B 06		L2: mov		eax,[esi]			; move part of first value into register
 00000024  1B 07			sbb		eax,[edi]			; subtract part of second value from part of first, accounting for borrow
 00000026  9C				pushfd						; preserve carry flag so it is not modified by following instructions
 00000027  89 02			mov		[edx],eax			; move partial result into memory
 00000029  83 C6 02			add		esi,TYPE WORD		; get next part of first value
 0000002C  83 C7 02			add		edi,TYPE WORD		; get next part of second value
 0000002F  83 C2 02			add		edx,TYPE WORD		; get next location in memory for storing results
 00000032  9D				popfd						; restore flags
 00000033  E2 ED			loop	L2					; begin loop again and decrement ECX
 00000035  66| 83 1A 00			sbb		WORD PTR [edx],0	; subtract the remaining carry, if any
 00000039  C3				ret							; terminate after subtraction and return to main
 0000003A			domath		endp



 0000003A			main		proc
 0000003A  BE 00000000 R		mov		esi,OFFSET num1		; get start of num1
 0000003F  BF 0000000C R		mov		edi,OFFSET num2		; get start of num2
 00000044  BA 00000018 R		mov		edx,OFFSET adsum	; get location to store addition result
 00000049  BB 00000000			mov		ebx,0				; set identifier for ADDITION
 0000004E  B9 00000006			mov		ecx,LENGTHOF num1	; set counter
 00000053  E8 FFFFFFA8			call	domath				; begin addition
 00000058  E8 00000000 E		call	DumpRegs			; dump registers
 0000005D  BE 00000000 R		mov		esi,OFFSET num1		; setting value for DumpMem
 00000062  B9 00000006			mov		ecx,LENGTHOF num1	; setting value for DumpMem
 00000067  BB 00000002			mov		ebx,TYPE num1		; setting value for DumpMem
 0000006C  E8 00000000 E		call	DumpMem				; display memory contents of adsum
 00000071  BE 0000000C R		mov		esi,OFFSET num2		; setting value for DumpMem
 00000076  B9 00000006			mov		ecx,LENGTHOF num2	; setting value for DumpMem
 0000007B  BB 00000002			mov		ebx,TYPE num2		; setting value for DumpMem
 00000080  E8 00000000 E		call	DumpMem				; display memory contents of adsum
 00000085  BE 00000018 R		mov		esi,OFFSET adsum	; setting value for DumpMem
 0000008A  B9 00000006			mov		ecx,LENGTHOF adsum	; setting value for DumpMem
 0000008F  BB 00000002			mov		ebx,TYPE adsum		; setting value for DumpMem
 00000094  E8 00000000 E		call	DumpMem				; display memory contents of adsum

 00000099  BE 00000024 R		mov		esi,OFFSET num3		; get start of num3
 0000009E  BF 00000030 R		mov		edi,OFFSET num4		; get start of num4
 000000A3  BA 0000003C R		mov		edx,OFFSET susum	; get location to store subtraction result
 000000A8  BB 00000001			mov		ebx,1				; set identifier for SUBTRACTION
 000000AD  B9 00000006			mov		ecx,LENGTHOF num3	; set counter
 000000B2  E8 FFFFFF49			call	domath				; begin subtraction
 000000B7  E8 00000000 E		call	DumpRegs			; dump registers
 000000BC  BE 00000024 R		mov		esi,OFFSET num3		; setting value for DumpMem
 000000C1  B9 00000006			mov		ecx,LENGTHOF num3	; setting value for DumpMem
 000000C6  BB 00000002			mov		ebx,TYPE num3		; setting value for DumpMem
 000000CB  E8 00000000 E		call	DumpMem				; display memory contents of adsum
 000000D0  BE 00000030 R		mov		esi,OFFSET num4		; setting value for DumpMem
 000000D5  B9 00000006			mov		ecx,LENGTHOF num4	; setting value for DumpMem
 000000DA  BB 00000002			mov		ebx,TYPE num4		; setting value for DumpMem
 000000DF  E8 00000000 E		call	DumpMem				; display memory contents of adsum
 000000E4  BE 0000003C R		mov		esi,OFFSET susum	; setting value for DumpMem
 000000E9  B9 00000006			mov		ecx,LENGTHOF susum	; setting value for DumpMem
 000000EE  BB 00000002			mov		ebx,TYPE susum		; setting value for DumpMem
 000000F3  E8 00000000 E		call	DumpMem				; display memory contents of susum
					exit						; invoke code to terminate the program
 000000F8  6A 00	   *	    push   +000000000h
 000000FA  E8 00000000 E   *	    call   ExitProcess
 000000FF			main		endp
				end			main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    03/08/21 08:04:27
#Driver, Version 1      (Driver.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000048 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000FF DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
domath . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000003A Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000005 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000022 _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000003A _TEXT	Length= 000000C5 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
adsum  . . . . . . . . . . . . .	Word	 00000018 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
num1 . . . . . . . . . . . . . .	Word	 00000000 _DATA	
num2 . . . . . . . . . . . . . .	Word	 0000000C _DATA	
num3 . . . . . . . . . . . . . .	Word	 00000024 _DATA	
num4 . . . . . . . . . . . . . .	Word	 00000030 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
susum  . . . . . . . . . . . . .	Word	 0000003C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
