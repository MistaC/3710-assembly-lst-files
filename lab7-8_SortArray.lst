Microsoft (R) Macro Assembler Version 14.00.24210.0	    03/24/21 13:05:31
*Sort Array, Version 1      (SortArray.asm		     Page 1 - 1


				TITLE Sort Array, Version 1      (SortArray.asm)
				;-----------------------------------------------
				; Chase Carroll
				; CPEN 3710
				; Mar 23, 2021
				;
				; This program performs sorting of signed word
				; integers. It outputs in hexadecimal format.
				; The sorting algorithm is bubble sort.
				; The sort direction is ascending.
				; Uses the EAX, EBX, ECX, and ESI registers.
				; May use other registers by calling Irvine
				; procedures.
				; Program executes in protected mode.
				;-----------------------------------------------
				include Irvine32.inc					; needed for access to various functions
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 



 00000000			.data									; set up variables and constants to use
				; array1 and array2 to be used for distinct calls of sortarray procedure.
				; alert string used for output formatting.
 00000000 0C0D 0003 FFAA	array1 SWORD 0C0Dh,0003h,0FFAAh,0F70h,0000h,0E222h,0ABCDh,0123h
	   0F70 0000 E222
	   ABCD 0123
 00000010 61A8 024F EC01	array2 SWORD 61A8h,024Fh,0EC01h,0FAEEh,2C03h,8472h,63AAh,0CD45h,2222h,61B1h,7A4Eh,8100h,0FDB2h,6543h,0FFFFh
	   FAEE 2C03 8472
	   63AA CD45 2222
	   61B1 7A4E 8100
	   FDB2 6543 FFFF
 0000002E 54 68 65 20 6C	alert1 BYTE "The largest signed value in the first array is: ",0
	   61 72 67 65 73
	   74 20 73 69 67
	   6E 65 64 20 76
	   61 6C 75 65 20
	   69 6E 20 74 68
	   65 20 66 69 72
	   73 74 20 61 72
	   72 61 79 20 69
	   73 3A 20 00
 0000005F 54 68 65 20 6C	alert2 BYTE "The largest signed value in the second array is: ",0
	   61 72 67 65 73
	   74 20 73 69 67
	   6E 65 64 20 76
	   61 6C 75 65 20
	   69 6E 20 74 68
	   65 20 73 65 63
	   6F 6E 64 20 61
	   72 72 61 79 20
	   69 73 3A 20 00



 00000000			.code
				;-----------------------------------------------
				; This procedure performs ascending bubble
				; sorting on a provided array of signed
				; word integers.
				; RECEIVES: ECX (array length), ESI (offset)
				; RETURNS: EAX (largest array value)
				; REQUIRES: Nothing
				; MODIFIES: Return value and flags
				; Program executes in protected mode.
				;-----------------------------------------------
				;eax,ebx,ecx,edx,edi,esi
 00000000			sortarray		proc
 00000000  49				dec		ecx						; set ecx appropriately for bubble sort, n-1
 00000001  8B D9			mov		ebx,ecx					; copy counter to preserve for resets, n-1
 00000003  8B C6			mov		eax,esi					; copy pointer to preserve for resets
 00000005			bubble:								; starting point of bubble sort
 00000005  51				push	ecx						; preserve outer loop
 00000006  8B CB			mov		ecx,ebx					; prepare inner loop counter, n-1
 00000008			inner1:								; START point of inner loop
 00000008  66| 8B 16			mov		dx,[esi]				; get CURRENT value
 0000000B  66| 8B 7E 02			mov		di,[esi+2]				; get NEXT value
 0000000F  66| 3B D7			cmp		dx,di					; compare CURRENT and NEXT value
 00000012  7C 07			jl		inner2					; IF CURRENT < NEXT (edx < edi)
													; ELSE
 00000014  66| 89 3E			mov		[esi],di				; swap CURRENT with NEXT
 00000017  66| 89 56 02			mov		[esi+2],dx				; swap NEXT with CURRENT
 0000001B			inner2:								; END point of inner loop
 0000001B  83 C6 02			add		esi,2					; increment ESI pointer to next value
 0000001E  E2 E8			loop	inner1					; loop if ECX not 0, decrement inner ECX
 00000020  59				pop		ecx						; restore outer loop
 00000021  8B F0			mov		esi,eax					; restore pointer to start of array
 00000023  E2 E0			loop	bubble					; loop if ECX not 0, decrement outer ECX
													; ESI should be at start of array
 00000025  03 F3			add		esi,ebx					; increment pointer halfway through array
 00000027  03 F3			add		esi,ebx					; increment pointer to last value of array
 00000029  66| 8B 1E			mov		bx,[esi]				; get largest value of array
 0000002C  0F B7 C3			movzx	eax,bx					; zero extend the largest value into return reg
 0000002F  C3				ret								; return control to main
 00000030			sortarray		endp



 00000030			main		proc
 00000030  BE 00000000 R		mov		esi,OFFSET array1		; setting value for DumpMem
 00000035  B9 00000008			mov		ecx,LENGTHOF array1		; setting value for DumpMem
 0000003A  BB 00000002			mov		ebx,TYPE array1			; setting value for DumpMem
 0000003F  E8 00000000 E		call	DumpMem					; display memory contents of array1
 00000044  BE 00000010 R		mov		esi,OFFSET array2		; setting value for DumpMem
 00000049  B9 0000000F			mov		ecx,LENGTHOF array2		; setting value for DumpMem
 0000004E  BB 00000002			mov		ebx,TYPE array2			; setting value for DumpMem
 00000053  E8 00000000 E		call	DumpMem					; display memory contents of array2
 00000058  E8 00000000 E		call	Crlf					; print carriage return
 0000005D  E8 00000000 E		call	Crlf					; print carriage return

 00000062  B9 00000008			mov		ecx,LENGTHOF array1		; set length of array
 00000067  BE 00000000 R		mov		esi,OFFSET array1		; set location of array
 0000006C  E8 FFFFFF8F			call	sortarray				; call sorting procedure

 00000071  BA 0000002E R		mov		edx,OFFSET alert1		; set location of format string
 00000076  E8 00000000 E		call	WriteString				; print format string
 0000007B  E8 00000000 E		call	WriteHex				; print largest value from array1
 00000080  E8 00000000 E		call	Crlf					; print carriage return
 00000085  E8 00000000 E		call	Crlf					; print carriage return

 0000008A  BE 00000000 R		mov		esi,OFFSET array1		; setting value for DumpMem
 0000008F  B9 00000008			mov		ecx,LENGTHOF array1		; setting value for DumpMem
 00000094  BB 00000002			mov		ebx,TYPE array1			; setting value for DumpMem
 00000099  E8 00000000 E		call	DumpMem					; display memory contents of array1
 0000009E  BE 00000010 R		mov		esi,OFFSET array2		; setting value for DumpMem
 000000A3  B9 0000000F			mov		ecx,LENGTHOF array2		; setting value for DumpMem
 000000A8  BB 00000002			mov		ebx,TYPE array2			; setting value for DumpMem
 000000AD  E8 00000000 E		call	DumpMem					; display memory contents of array2
 000000B2  E8 00000000 E		call	Crlf					; print carriage return
 000000B7  E8 00000000 E		call	Crlf					; print carriage return

 000000BC  B9 0000000F			mov		ecx,LENGTHOF array2		; set length of array
 000000C1  BE 00000010 R		mov		esi,OFFSET array2		; set location of array
 000000C6  E8 FFFFFF35			call	sortarray				; call sorting procedure

 000000CB  BA 0000005F R		mov		edx,OFFSET alert2		; set location of format string
 000000D0  E8 00000000 E		call	WriteString				; print format string
 000000D5  E8 00000000 E		call	WriteHex				; print largest value from array2
 000000DA  E8 00000000 E		call	Crlf					; print carriage return
 000000DF  E8 00000000 E		call	Crlf					; print carriage return

 000000E4  BE 00000000 R		mov		esi,OFFSET array1		; setting value for DumpMem
 000000E9  B9 00000008			mov		ecx,LENGTHOF array1		; setting value for DumpMem
 000000EE  BB 00000002			mov		ebx,TYPE array1			; setting value for DumpMem
 000000F3  E8 00000000 E		call	DumpMem					; display memory contents of array1
 000000F8  BE 00000010 R		mov		esi,OFFSET array2		; setting value for DumpMem
 000000FD  B9 0000000F			mov		ecx,LENGTHOF array2		; setting value for DumpMem
 00000102  BB 00000002			mov		ebx,TYPE array2			; setting value for DumpMem
 00000107  E8 00000000 E		call	DumpMem					; display memory contents of array2

					exit							; invoke code to terminate the program
 0000010C  6A 00	   *	    push   +000000000h
 0000010E  E8 00000000 E   *	    call   ExitProcess
 00000113			main		endp
				end			main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    03/24/21 13:05:31
*Sort Array, Version 1      (SortArray.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000091 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000113 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000030 _TEXT	Length= 000000E3 Public STDCALL
sortarray  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000030 Public STDCALL
  bubble . . . . . . . . . . . .	L Near	 00000005 _TEXT	
  inner1 . . . . . . . . . . . .	L Near	 00000008 _TEXT	
  inner2 . . . . . . . . . . . .	L Near	 0000001B _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
alert1 . . . . . . . . . . . . .	Byte	 0000002E _DATA	
alert2 . . . . . . . . . . . . .	Byte	 0000005F _DATA	
array1 . . . . . . . . . . . . .	Word	 00000000 _DATA	
array2 . . . . . . . . . . . . .	Word	 00000010 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
